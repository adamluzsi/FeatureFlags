// Code generated by go-swagger; DO NOT EDIT.

package release_flag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/toggler-io/toggler/lib/go/models"
)

// GetClientConfigReader is a Reader for the GetClientConfig structure.
type GetClientConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClientConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClientConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetClientConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetClientConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetClientConfigOK creates a GetClientConfigOK with default headers values
func NewGetClientConfigOK() *GetClientConfigOK {
	return &GetClientConfigOK{}
}

/*GetClientConfigOK handles this case with default header values.

ClientConfigResponse returns information about the requester's rollout feature enrollment statuses.
*/
type GetClientConfigOK struct {
	Payload *models.ClientConfigResponseBody
}

func (o *GetClientConfigOK) Error() string {
	return fmt.Sprintf("[GET /v/client-config][%d] getClientConfigOK  %+v", 200, o.Payload)
}

func (o *GetClientConfigOK) GetPayload() *models.ClientConfigResponseBody {
	return o.Payload
}

func (o *GetClientConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientConfigResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientConfigBadRequest creates a GetClientConfigBadRequest with default headers values
func NewGetClientConfigBadRequest() *GetClientConfigBadRequest {
	return &GetClientConfigBadRequest{}
}

/*GetClientConfigBadRequest handles this case with default header values.

ErrorResponse will contains a response about request that had some kind of problem.
The details will be included in the body.
*/
type GetClientConfigBadRequest struct {
	Payload *models.ErrorResponseBody
}

func (o *GetClientConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /v/client-config][%d] getClientConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetClientConfigBadRequest) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetClientConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientConfigInternalServerError creates a GetClientConfigInternalServerError with default headers values
func NewGetClientConfigInternalServerError() *GetClientConfigInternalServerError {
	return &GetClientConfigInternalServerError{}
}

/*GetClientConfigInternalServerError handles this case with default header values.

ErrorResponse will contains a response about request that had some kind of problem.
The details will be included in the body.
*/
type GetClientConfigInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetClientConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v/client-config][%d] getClientConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetClientConfigInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetClientConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetClientConfigBody get client config body
swagger:model GetClientConfigBody
*/
type GetClientConfigBody struct {

	// PilotExtID is the public uniq id that identify the caller pilot
	// Required: true
	PilotExtID *string `json:"id"`

	// ReleaseFlags are the list of private release flag name that should be matched against the pilot and state the enrollment for each.
	// Required: true
	ReleaseFlags []string `json:"release_flags"`
}

// Validate validates this get client config body
func (o *GetClientConfigBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePilotExtID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateReleaseFlags(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetClientConfigBody) validatePilotExtID(formats strfmt.Registry) error {

	if err := validate.Required("Body"+"."+"id", "body", o.PilotExtID); err != nil {
		return err
	}

	return nil
}

func (o *GetClientConfigBody) validateReleaseFlags(formats strfmt.Registry) error {

	if err := validate.Required("Body"+"."+"release_flags", "body", o.ReleaseFlags); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetClientConfigBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetClientConfigBody) UnmarshalBinary(b []byte) error {
	var res GetClientConfigBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
