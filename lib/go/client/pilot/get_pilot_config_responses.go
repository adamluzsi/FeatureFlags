// Code generated by go-swagger; DO NOT EDIT.

package pilot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/toggler-io/toggler/lib/go/models"
)

// GetPilotConfigReader is a Reader for the GetPilotConfig structure.
type GetPilotConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPilotConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPilotConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPilotConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPilotConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPilotConfigOK creates a GetPilotConfigOK with default headers values
func NewGetPilotConfigOK() *GetPilotConfigOK {
	return &GetPilotConfigOK{}
}

/*GetPilotConfigOK handles this case with default header values.

GetPilotConfigResponse returns information about the requester's rollout feature enrollment statuses.
*/
type GetPilotConfigOK struct {
	Payload *GetPilotConfigOKBody
}

func (o *GetPilotConfigOK) Error() string {
	return fmt.Sprintf("[GET /v/config][%d] getPilotConfigOK  %+v", 200, o.Payload)
}

func (o *GetPilotConfigOK) GetPayload() *GetPilotConfigOKBody {
	return o.Payload
}

func (o *GetPilotConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPilotConfigOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPilotConfigBadRequest creates a GetPilotConfigBadRequest with default headers values
func NewGetPilotConfigBadRequest() *GetPilotConfigBadRequest {
	return &GetPilotConfigBadRequest{}
}

/*GetPilotConfigBadRequest handles this case with default header values.

ErrorResponse will contains a response about request that had some kind of problem.
The details will be included in the body.
*/
type GetPilotConfigBadRequest struct {
	Payload *models.ErrorResponseBody
}

func (o *GetPilotConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /v/config][%d] getPilotConfigBadRequest  %+v", 400, o.Payload)
}

func (o *GetPilotConfigBadRequest) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetPilotConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPilotConfigInternalServerError creates a GetPilotConfigInternalServerError with default headers values
func NewGetPilotConfigInternalServerError() *GetPilotConfigInternalServerError {
	return &GetPilotConfigInternalServerError{}
}

/*GetPilotConfigInternalServerError handles this case with default header values.

ErrorResponse will contains a response about request that had some kind of problem.
The details will be included in the body.
*/
type GetPilotConfigInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetPilotConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v/config][%d] getPilotConfigInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPilotConfigInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetPilotConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetPilotConfigBody get pilot config body
swagger:model GetPilotConfigBody
*/
type GetPilotConfigBody struct {

	// PilotExtID is the public uniq id that identify the caller pilot
	// Required: true
	PilotExtID *string `json:"id"`

	// ReleaseFlags are the list of private release flag name that should be matched against the pilot and state the enrollment for each.
	// Required: true
	ReleaseFlags []string `json:"release_flags"`
}

// Validate validates this get pilot config body
func (o *GetPilotConfigBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePilotExtID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateReleaseFlags(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPilotConfigBody) validatePilotExtID(formats strfmt.Registry) error {

	if err := validate.Required("Body"+"."+"id", "body", o.PilotExtID); err != nil {
		return err
	}

	return nil
}

func (o *GetPilotConfigBody) validateReleaseFlags(formats strfmt.Registry) error {

	if err := validate.Required("Body"+"."+"release_flags", "body", o.ReleaseFlags); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPilotConfigBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPilotConfigBody) UnmarshalBinary(b []byte) error {
	var res GetPilotConfigBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPilotConfigOKBody get pilot config o k body
swagger:model GetPilotConfigOKBody
*/
type GetPilotConfigOKBody struct {

	// release
	Release *Release `json:"release,omitempty"`
}

// Validate validates this get pilot config o k body
func (o *GetPilotConfigOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRelease(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPilotConfigOKBody) validateRelease(formats strfmt.Registry) error {

	if swag.IsZero(o.Release) { // not required
		return nil
	}

	if o.Release != nil {
		if err := o.Release.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPilotConfigOK" + "." + "release")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPilotConfigOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPilotConfigOKBody) UnmarshalBinary(b []byte) error {
	var res GetPilotConfigOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*Release Release holds information related the release management
swagger:model Release
*/
type Release struct {

	// Flags hold the states of the release flags of the client
	Flags map[string]bool `json:"flags,omitempty"`
}

// Validate validates this release
func (o *Release) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *Release) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *Release) UnmarshalBinary(b []byte) error {
	var res Release
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
