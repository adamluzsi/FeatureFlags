// Code generated by "esc -o ./views/fs.go -ignore fs.go -pkg views -prefix views ./views"; DO NOT EDIT.

package views

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	"path"
	"sync"
	"time"
)

type _escLocalFS struct{}

var _escLocal _escLocalFS

type _escStaticFS struct{}

var _escStatic _escStaticFS

type _escDirectory struct {
	fs   http.FileSystem
	name string
}

type _escFile struct {
	compressed string
	size       int64
	modtime    int64
	local      string
	isDir      bool

	once sync.Once
	data []byte
	name string
}

func (_escLocalFS) Open(name string) (http.File, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	return os.Open(f.local)
}

func (_escStaticFS) prepare(name string) (*_escFile, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	var err error
	f.once.Do(func() {
		f.name = path.Base(name)
		if f.size == 0 {
			return
		}
		var gr *gzip.Reader
		b64 := base64.NewDecoder(base64.StdEncoding, bytes.NewBufferString(f.compressed))
		gr, err = gzip.NewReader(b64)
		if err != nil {
			return
		}
		f.data, err = ioutil.ReadAll(gr)
	})
	if err != nil {
		return nil, err
	}
	return f, nil
}

func (fs _escStaticFS) Open(name string) (http.File, error) {
	f, err := fs.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.File()
}

func (dir _escDirectory) Open(name string) (http.File, error) {
	return dir.fs.Open(dir.name + name)
}

func (f *_escFile) File() (http.File, error) {
	type httpFile struct {
		*bytes.Reader
		*_escFile
	}
	return &httpFile{
		Reader:   bytes.NewReader(f.data),
		_escFile: f,
	}, nil
}

func (f *_escFile) Close() error {
	return nil
}

func (f *_escFile) Readdir(count int) ([]os.FileInfo, error) {
	if !f.isDir {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is not directory", f.name)
	}

	fis, ok := _escDirs[f.local]
	if !ok {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is directory, but we have no info about content of this dir, local=%s", f.name, f.local)
	}
	limit := count
	if count <= 0 || limit > len(fis) {
		limit = len(fis)
	}

	if len(fis) == 0 && count > 0 {
		return nil, io.EOF
	}

	return fis[0:limit], nil
}

func (f *_escFile) Stat() (os.FileInfo, error) {
	return f, nil
}

func (f *_escFile) Name() string {
	return f.name
}

func (f *_escFile) Size() int64 {
	return f.size
}

func (f *_escFile) Mode() os.FileMode {
	return 0
}

func (f *_escFile) ModTime() time.Time {
	return time.Unix(f.modtime, 0)
}

func (f *_escFile) IsDir() bool {
	return f.isDir
}

func (f *_escFile) Sys() interface{} {
	return f
}

// FS returns a http.Filesystem for the embedded assets. If useLocal is true,
// the filesystem's contents are instead used.
func FS(useLocal bool) http.FileSystem {
	if useLocal {
		return _escLocal
	}
	return _escStatic
}

// Dir returns a http.Filesystem for the embedded assets on a given prefix dir.
// If useLocal is true, the filesystem's contents are instead used.
func Dir(useLocal bool, name string) http.FileSystem {
	if useLocal {
		return _escDirectory{fs: _escLocal, name: name}
	}
	return _escDirectory{fs: _escStatic, name: name}
}

// FSByte returns the named file from the embedded assets. If useLocal is
// true, the filesystem's contents are instead used.
func FSByte(useLocal bool, name string) ([]byte, error) {
	if useLocal {
		f, err := _escLocal.Open(name)
		if err != nil {
			return nil, err
		}
		b, err := ioutil.ReadAll(f)
		_ = f.Close()
		return b, err
	}
	f, err := _escStatic.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.data, nil
}

// FSMustByte is the same as FSByte, but panics if name is not present.
func FSMustByte(useLocal bool, name string) []byte {
	b, err := FSByte(useLocal, name)
	if err != nil {
		panic(err)
	}
	return b
}

// FSString is the string version of FSByte.
func FSString(useLocal bool, name string) (string, error) {
	b, err := FSByte(useLocal, name)
	return string(b), err
}

// FSMustString is the string version of FSMustByte.
func FSMustString(useLocal bool, name string) string {
	return string(FSMustByte(useLocal, name))
}

var _escData = map[string]*_escFile{

	"/doc/show.html": {
		name:    "show.html",
		local:   "views/doc/show.html",
		size:    60,
		modtime: 1586913508,
		compressed: `
H4sIAAAAAAAC/6quTklNy8xLVVDKTczMU6qt5VJQUFCwScksswOzQKC6Wg8mrg+WqK5OzUuprQUEAAD/
/+o8KgA8AAAA
`,
	},

	"/env/create.html": {
		name:    "create.html",
		local:   "views/env/create.html",
		size:    978,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/4xTwa6cMAy8v6+wfA+o7wxcKvXYQ3+gMsQLkYKDguG9FeLfKwJqt2jZlgtGHs9MBmdZ
LN+cMGBPTnBd3wAACutmaDyNY4lNEGVRrFIndbv3U9N0TBbcaBoW5YjVskD2nXqGdS3y7v1h9oF5mCKb
9oH4DPCmDp/GxxYSdDpe5stpJs3dQuyBGnVBSsxZZoSetQu2xCGMin+pJvDvypB3rbBFsKRkaqcfFC2L
+SBtOidtic8kd1nH3o6sz9sJ4mSYFIR6LvHn7glB7wOX2DlrWRBm8hMfRqu3a6pzelv+MXjTxjANeO0h
DXuq2cMtxBJvTDpFxuoHe6aR4ZunFrY/VuQJ9g+q/UjO/mE6zscyZ1uFL+ePZ89A+VP/Cz54argL3nIs
0fLgw71nUWCZXQyS6k07y7IXURS5dfOrjOtJNchhbpzq3p2W5wA81GaIrqd4x+prZNI9ziLfmxdaRX69
OkW+reXpYuy+n3we5bKw2HX9FQAA//9i4hs40gMAAA==
`,
	},

	"/env/index.html": {
		name:    "index.html",
		local:   "views/env/index.html",
		size:    766,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/3xRQW/yMAy991dYuZdInEM+fRo7IE37D6Exq7XUQWlaiUX57xMFRgPdbvZ79vOznZLF
AzGC6AyxyLlSlkZonOn7jWg8R+QodAUAoNr1A1G3aCxQXzfIEYPQWzw6f+qQI7zySMHzFL9RH5Vs17q6
CJmbznEIWO+HGD3DLK6PgToTTgLagIeNkMijbAKaiKJo7ZCH2hF/Cv0y0bDsQElzmx3N3mEhckHuYd36
QF+eo3HXzS+N52Xnebgn1wL9bjpUMrbPzG67jP9vInnuS1LJufiZm0bPZu+9Pd0rUoJg+ANhBTn/5dDq
lGB1dgk5KxntcsFu+ytdABM4uGdwIhxpZWYf/Ed286MuNFqa/qKkowVZ+ahb+ilPlBIg22J5ObuRktNj
dVUpaWnUVUrINufvAAAA//9UPxOR/gIAAA==
`,
	},

	"/env/show.html": {
		name:    "show.html",
		local:   "views/env/show.html",
		size:    975,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/8yRQYvbMBCFz86vGOay7UEx3bOcUsgeeumlP6Ao1iQeKo2MLIkG4/9e4jhhHXZpL4We
9Dy89415M46WjiwE6A0LTtOm0pYLtM4MQ4NtkESScLepKt09P4xVR8YCD6olSRRxN46wfZGy/WY8wTTp
unuek6+IfY6kTjNwNXfqEH4pF08wO/LyqE9Xa6WPIXowbeIgDdYkBcFT6oJtsA9DwtWC2XxXyjg+CdkF
Vekjk7MDpeW70ix9TiDGU4M/rliEdO6pwY6tJUEoxmW64BO+GSMp24t6J/dQzfsMtn8gfN2v8oecUpAl
MuSD54cuFsMrrfrI3sQz7r6bQrq+Tm/l1Ot2dH2p8P86giVHif5xh0Fax+3PBiOlHAXaIEeO/sPTl0hw
DhmGHOnz08e32r6jq/38q7Cn3oWzJ0nwIoVjkIu+7f/rC+jactltNnd1e8eRxE7T7wAAAP//2z6YRc8D
AAA=
`,
	},

	"/flag/create.html": {
		name:    "create.html",
		local:   "views/flag/create.html",
		size:    962,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/4xTwa6cMAy8v6+wfA+o7wxcKvXYQ3+gMsRApJCg4Ox7K8S/VySo3aJlWy4YeTwzmZh1
1dwbx4ATGYfb9gYAUGlzg87SstTYeSfsBJvUSd3x/dRUI5MGs6iOnXDAZl2h+E4Tw7ZV5fj+MPvAPMfA
anggPgOsav2nsmGABI3HS305zaS53ocJqBPjXY1lb2lAmFhGr2uc/SL4l2xC/64UWTM41giahFRr5IOC
Zqc+SLrRuKHGZ5pZ17DVC8vzdoIYN0cBRxPX+DN7QpD7zDWORmt2CDeykQ+jzds11Tm+/QKCt2oIPs54
7SENW2rZQu9DjT2TxMDY/GDLtDB8szTAfmVVmWD/oMpHMvoP03G+PfhiL/ElwfHkEIQ/5b/gs6WOR281
h6yURIuieHHyqtTm9irSNop4d1hZYjuZ064cgIdazcFMFO7YfA1MktOryty80KrK602pyn0LTz9C9v3k
8yjXlZ3etl8BAAD//xKyhKDCAwAA
`,
	},

	"/flag/index.html": {
		name:    "index.html",
		local:   "views/flag/index.html",
		size:    628,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/2RQ0YqrMBR81q8IebeBPp/mcrnlQmHZh/7BqTmtYWNS4rHQDf77ErXWdn1xnMPMOJOS
obP1JGSL1sthKAsw9iZqh123k3XwTJ6lLosCmu0bXTWERtiuqskzRamPwbnQs/jv8CI+bMegmq0usxgf
2msfqTr1zMGLFa6u0bYY71I0kc47qc4OL6qOhEzyRduS7ytn/ZfU/8azOJIj7GiM7UDhlMh4cvSinJgn
rJoQ7XfwjG5sWADnRjOM4ztz+hNbAsXNkznsX7//1myD7xYS1KzPzOg5mZ6CuetSrJ6URER/IbERef11
dAFsdEpik/PFMIBi83Y57H/zEyqgdw9YgLMacD3tH2t2i4HUZCzn5UA5uxioxeGZMBV7K0DezD8Paq44
wjxybg7K2JsuUyJvhuEnAAD///e331l0AgAA
`,
	},

	"/flag/show.html": {
		name:    "show.html",
		local:   "views/flag/show.html",
		size:    991,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/8yRTYvbMBCGz86vGOay7UEx3bOcUlgKvZTS/oCiSGNbVBoZfYQG4/9e7DhhHbYfl8Ke
NBLv+0g8GkdDrWUC9MoyTtOuksaeQDuVUoM6cCbOeNhVlewf745FT8qATUITZ4p4GEfYf3Sq239WnmCa
ZN0/LtVnyKFEEt1C3Jw7cQw/hYsdLImyLuLdJVrJNkQPSmcbuMG6dapD8JT7YBocQsq4uWFJ3yahnO2Y
zMqqZGvJmUR53VfS8lAysPLU4PcLFiGfB2qwt8YQI5yUKzTjM75Ym5+0n8ffFO/t/IFizd8Yn542hGPJ
OfDaSeXo7Z2PNfBsFkO0XsUzHr6pE8FMhS+RWorEmpKsL7GrsXqrTNaz11f2NYYcZfrvXgNrZ/WPBiPl
Ehl04NZG/+bhQyQ4hwKpRHr/8PalH7ihq6flsfCVHKl08X+99Z/Vy9rY02G3u03XdRyJzTT9CgAA//+o
RsS53wMAAA==
`,
	},

	"/layout.html": {
		name:    "layout.html",
		local:   "views/layout.html",
		size:    2422,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/7yWUYvjNhDH3/dTTHSvVdSlfThKbCh3OVq4hbLs27IUxRo7sytLRpKThpDvXmQriZM4
dNmGe8rIGv//P000srZbhSUZBNbICtludwcAMJsoW4RNg7AMtc77ZzEELU2VMTRs/xClyu+6uBsHChrz
YKtKo5uJfjiYrzFIKJbSeQwZa0PJPyep47SRNWZMoS8cNYGsYVBYE9CEjD31yr/BF2uCsxo2tnXwDWVo
HcIjapQePawpLKGn8JMrBivCdWNdGKivSYVlpnBFBfJu8BOQoUBSc19Ijdn99Gc2XI8m8wYOdcZ82Gj0
S8TAYOmwzJiQ3mPwomkdFr7/5TWZaeH9kOk9GvH90prA5Rq9rTFpHEUmnD9TCTog/DmHzy/5xxgrR8pz
h76xxtMKudWK0yj25BmNovKF8/wCowqJIj64FcoYA+cnHDerRwTQcmPb4IUnhbxG06Zi/KhCjDK8qwIz
0fdlFy+s2uR3aULRCkhlrNdlUGjpfca6rVmdbyh4QNOmNoITfJlQP0Uk1inG6DuZt4NmV7G4zgHuQfkP
WS9aV6EDKqw5Ee9yfCNNPhPdz9FWyCHhfi09Q3KNhVpIB92KWn6/D2rF7/mv5yhRYliCTuo0J633PIvH
CpOp9n/aJ5Y/7U+9IeVBotWXGpp8GLFLO+QynwLWLD9UX6BZCTIK/2Fj2rHyX7HRdlOjCTA3K3LWxNhH
xpnQ9D+8Sy2r/zBPxzF807K6haWzWl/s2hG/xz7vFpYNaRtESUZddf0rpsCXp+83sFO28OJx/vvXh/m0
vm4Z0z7sNpp/0tXCr2VVoRMtiWsMEKSr4jf874WWkSm9w1vqGmDUYBR3Jlp91pZC0WrY9t1wpPElmQNf
+oiPNf4vF42/3QasGy0DQlKZpqvPueFJ3N9IwLvieEq/etHS9NWzeFx184c3+5M3HcjdRWq7RaN2u38D
AAD//9X/CXh2CQAA
`,
	},

	"/login.html": {
		name:    "login.html",
		local:   "views/login.html",
		size:    360,
		modtime: 1586913508,
		compressed: `
H4sIAAAAAAAC/2SQUY7yMAyE33sKy+80F2h6if+/QGgMWJvYUeKyQlXvvmrLSrC8JfONRx4vS6QLCwHm
wILr2gEADJHvMKXQmsdJxUgMx53s9KI1/+IyVzptAkKYjFU8uqRXFoRMdtPosWh7HT8imFJsZO/yjljK
bCAhk0fTLxIEexTyWEJr31ojQklhopumSNXj/83T9z2O3WfYeTZTeQa0+ZzZ8G31p+HlfSqVc6gPHP/x
VYBlcAf4U8F9dhjcdonjP7jI97FbFpK4rj8BAAD///JUCoxoAQAA
`,
	},

	"/pilot/edit.html": {
		name:    "edit.html",
		local:   "views/pilot/edit.html",
		size:    1833,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/7RVQW/bPAy951cQwncq4Bhfj4Pty5oOuxTFtnvBWIxNTJY8i3ZbCP7vg2W3S9olwdpN
pwSkH9+jyKcQ0gv4tPkGacvGSUqaBS7ScVyFoGnHlkA1yFaN4woAINM8QGnQ+1yVzgpZUUWMxGh9+SKY
1IQa2CclWaFOFbdTGfjorHTOwC1aMh8gBFjHwOZBqLNoPl/BOGZpfVmsnsFDgA5tRbC+JpS+o2uDlYeF
2P7Jdq5rAEthZ3O1KNsZrFJPknTOGNeLgoakdjpXrfOiXoHMZ1HT9h0lEfX5V4KGK0tagUbBZMtyj50m
m9yjlDXbKlf/qz36hwSZjPYkxZGyABnbtheQx5ZyVbPWZBVYbChXdzNxBQOanhb+b0KKnVnTg9zxL7gQ
4L/f3MZ7Kky9f1Fi/YUMoY+X+G58ssMrBVfUGve4scMT+uo4/t5Qx/st5/FMqs717Qli8WODWzKwc12u
yE7D1cSleKHxBhuKMx3Tz0B6MlQKsD6APJDM/q7FTrjkFoVtdYZlhHXttBFPXbqvWciwl2mGQwDeAf1Y
9vCroBAcpozjTIt0CGT1OJ6vOJ1NFED6PL105vfHQrYGy++nhRykvFHItetKgiuafGVA+ZeKejt771E9
ewlvVHPjBHxLJe/4rynJ0plKsTqdtu1FnF322ffbhkUd7N+coAqPA2Xp/O+EPaSah2NOmx632iydfLzY
f2DI6ulBWe3BLl39GQAA//8lG+xpKQcAAA==
`,
	},

	"/pilot/find.html": {
		name:    "find.html",
		local:   "views/pilot/find.html",
		size:    590,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/3xRwYrcMAw9J18hdFxITO9OTruUhVL20HvxxJoZgSMHR8nOYvzvJclsGUpbn56Q9N7T
c87mCb6+/AAzcYhqziwenkwpdc6eziwEODoWLKWurOcVhuDmucMhipIo9nVV2XNMI7hBOUqHD0wII+k1
+g6nOCt+7k5Lombf+Y0aF/gi5BG8U9ecWN9d8iTNu9PhynLp8MuuVdkzU/Az6V5VdqZAg4J+TNSh0k0R
xI3U4W6jJVl/sse+hr+8nCE5uRC0L7JyijKS6AzbrfuzcdpugtWFhTrMGdrXZygF+w1+dyNBKdYcU/+U
IPGflNYcdvv6KFmm5T/eb7p5hym4ga4xeEodvm0teFtOgQd4uSklcQFen9u2xXskp0U1yp12Xk4j/5H9
feABN1Pi0aUP7L9F52EXseboHbGbx9yt2T6trytrPK99nTOJL+VXAAAA//81gx/gTgIAAA==
`,
	},

	"/rollout/edit.html": {
		name:    "edit.html",
		local:   "views/rollout/edit.html",
		size:    1010,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/4ySz27bMAzGz8lTEDxtBVy1PQ62D1uzYZeh6HYvGIuxhUmUIcvuMsPvPvhPGzdb0eX0
hSI//miy79UFfNn9AFUb66NibSJcqGHY9r3mgxEGdGQEh2G7SbXpoLDUNBkWXiJLxHy72aTVzVk4qZg0
mCYpWCKHKWuzG73v2TI1DJ8tlXDvrfVthDtLAl6g7+HylmvrjzvpTPDiWOI3cgzDAAcfpoTFYTRYnkYE
Vd3k21EcfHBARTReMlRh7qDaWlNkBMex8jrD2jcRn6DrNnAy1T2rpIlU/GSNoClSsjfxkYJmSR4pFpWR
MsPrear0YNjqhuP0b5NaLll0vh4tVUtwzjBStxHiseYMK6M1C4KQ4wwfZjyEjmzLC+WbVQdL5YM5VZ19
pK+3MAxvu7B05yZ/reLJapmU9mzHtWRYcxg3TSVjfvesP6RqyvlHb2ndngOC0S+KF5ZVZCqF+eeMZHiF
4OhXhtdXVy9gPx5PjS9P8hXghllj/slLDN5CGXxbQyDR3pnfHODd+P7+P/knr4V81q9hfWfWa6B9G6OX
xbJp986cHeWSsNJJHYyjcMS8oY5TNUfnS1TrU0zVeMdjp1Rp0+XbvmfRw/AnAAD//2BBpfjyAwAA
`,
	},

	"/rollout/index.html": {
		name:    "index.html",
		local:   "views/rollout/index.html",
		size:    643,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/1yRUYvcIBSFn5NfcZHSh4WMsM+OpbC7pS+llP4BN94ZBUcHvckyFf97MWYnYfKSw8nN
PcfPnPkT/Hj9C/xqXSCO2hI88VL6nDWerEdgF2U9K6XvhLYzjE6ldGRj8ISemOz7rhPm+cEfDCoNNg0j
esLI5G+HKiEkdDgSkEGI2KyTU2f4MHY0EINzYSK4OuXhFib4sMkABRiN8mcU3Dy3PFLvDj8jr1PEoTmb
HEyI9l/wpByTfVf/qZVWGZd39eSbU2fByWzO95Fs8OluCr7OV2fZ0Za8B32TPeyenCHWonB4Q0VTxLo8
QWW3j+0EaZkzHP40BHXql7oglCI46d1QU52Y3KfshLNSKDART0fGV2LLvX1DPw9WH3OGL4cXvLpwe/Wz
jcFf0NPPFyjla4W9zuzTl49M1i2Cqy2LO3vvwO8ltpINzQMC9LoeeSXWKC2y3kuFJ7i2s+xzRq9L+R8A
AP//jLwB/oMCAAA=
`,
	},

	"/rollout/landing.html": {
		name:    "landing.html",
		local:   "views/rollout/landing.html",
		size:    649,
		modtime: 1589853632,
		compressed: `
H4sIAAAAAAAC/3SRwYrcMAyGz8lTCB8XsqZ7dnLqUgql9NAX8MRKInDkYCuZHYzfvSSZaZelq9Nv89vS
/yln/QTfXn+DXsgH0QOxgyddSp2zw4EYQc2WWJVSV8bRBr23KbWqDyzIorq6qsz08uG6mdA6oNT0yILx
cFW/PNqEkNBjL2AZHC4+3GZkAeSNYuBDXyeMCLewwpXSBBKgDzzQuEaEGLwPq8DiLae9tZ5eunoXQ4gz
2F4ocKv03aeJHb4pmFGm4Fq1hCTqMeuyRmyOZ39VYz2NjE6Bs2KbC8nVRofcXK30E/HYqi9nGDMQepdQ
jlNl7qnktmCrBN9EAdsZW4W8NeRUV8N/KmeIlkeE59d/ABLssI8yYdkDwWb9iq3KGZ6/f4VSVLfLn3ZG
KMXo0/VpC2T3+NLoc9CDWVWZyyoS+D52Wi8zfeBzN7zTzRJptvGmuh/BOoh4rnXwdnysJxl9ek9U+j0r
o3fQXV0Z7Wjr6pyRXSl/AgAA//8VahRciQIAAA==
`,
	},

	"/doc": {
		name:  "doc",
		local: `views/doc`,
		isDir: true,
	},

	"/env": {
		name:  "env",
		local: `views/env`,
		isDir: true,
	},

	"/flag": {
		name:  "flag",
		local: `views/flag`,
		isDir: true,
	},

	"/pilot": {
		name:  "pilot",
		local: `views/pilot`,
		isDir: true,
	},

	"/rollout": {
		name:  "rollout",
		local: `views/rollout`,
		isDir: true,
	},

	"/views": {
		name:  "views",
		local: `./views`,
		isDir: true,
	},
}

var _escDirs = map[string][]os.FileInfo{

	"views/doc": {
		_escData["/doc/show.html"],
	},

	"views/env": {
		_escData["/env/create.html"],
		_escData["/env/index.html"],
		_escData["/env/show.html"],
	},

	"views/flag": {
		_escData["/flag/create.html"],
		_escData["/flag/index.html"],
		_escData["/flag/show.html"],
	},

	"views/pilot": {
		_escData["/pilot/edit.html"],
		_escData["/pilot/find.html"],
	},

	"views/rollout": {
		_escData["/rollout/edit.html"],
		_escData["/rollout/index.html"],
		_escData["/rollout/landing.html"],
	},

	"./views": {
		_escData["/doc"],
		_escData["/env"],
		_escData["/flag"],
		_escData["/layout.html"],
		_escData["/login.html"],
		_escData["/pilot"],
		_escData["/rollout"],
	},
}
