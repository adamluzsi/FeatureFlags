// Code generated by "esc -o ./views/fs.go -ignore fs.go -pkg views -prefix views ./views"; DO NOT EDIT.

package views

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	"path"
	"sync"
	"time"
)

type _escLocalFS struct{}

var _escLocal _escLocalFS

type _escStaticFS struct{}

var _escStatic _escStaticFS

type _escDirectory struct {
	fs   http.FileSystem
	name string
}

type _escFile struct {
	compressed string
	size       int64
	modtime    int64
	local      string
	isDir      bool

	once sync.Once
	data []byte
	name string
}

func (_escLocalFS) Open(name string) (http.File, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	return os.Open(f.local)
}

func (_escStaticFS) prepare(name string) (*_escFile, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	var err error
	f.once.Do(func() {
		f.name = path.Base(name)
		if f.size == 0 {
			return
		}
		var gr *gzip.Reader
		b64 := base64.NewDecoder(base64.StdEncoding, bytes.NewBufferString(f.compressed))
		gr, err = gzip.NewReader(b64)
		if err != nil {
			return
		}
		f.data, err = ioutil.ReadAll(gr)
	})
	if err != nil {
		return nil, err
	}
	return f, nil
}

func (fs _escStaticFS) Open(name string) (http.File, error) {
	f, err := fs.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.File()
}

func (dir _escDirectory) Open(name string) (http.File, error) {
	return dir.fs.Open(dir.name + name)
}

func (f *_escFile) File() (http.File, error) {
	type httpFile struct {
		*bytes.Reader
		*_escFile
	}
	return &httpFile{
		Reader:   bytes.NewReader(f.data),
		_escFile: f,
	}, nil
}

func (f *_escFile) Close() error {
	return nil
}

func (f *_escFile) Readdir(count int) ([]os.FileInfo, error) {
	if !f.isDir {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is not directory", f.name)
	}

	fis, ok := _escDirs[f.local]
	if !ok {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is directory, but we have no info about content of this dir, local=%s", f.name, f.local)
	}
	limit := count
	if count <= 0 || limit > len(fis) {
		limit = len(fis)
	}

	if len(fis) == 0 && count > 0 {
		return nil, io.EOF
	}

	return fis[0:limit], nil
}

func (f *_escFile) Stat() (os.FileInfo, error) {
	return f, nil
}

func (f *_escFile) Name() string {
	return f.name
}

func (f *_escFile) Size() int64 {
	return f.size
}

func (f *_escFile) Mode() os.FileMode {
	return 0
}

func (f *_escFile) ModTime() time.Time {
	return time.Unix(f.modtime, 0)
}

func (f *_escFile) IsDir() bool {
	return f.isDir
}

func (f *_escFile) Sys() interface{} {
	return f
}

// FS returns a http.Filesystem for the embedded assets. If useLocal is true,
// the filesystem's contents are instead used.
func FS(useLocal bool) http.FileSystem {
	if useLocal {
		return _escLocal
	}
	return _escStatic
}

// Dir returns a http.Filesystem for the embedded assets on a given prefix dir.
// If useLocal is true, the filesystem's contents are instead used.
func Dir(useLocal bool, name string) http.FileSystem {
	if useLocal {
		return _escDirectory{fs: _escLocal, name: name}
	}
	return _escDirectory{fs: _escStatic, name: name}
}

// FSByte returns the named file from the embedded assets. If useLocal is
// true, the filesystem's contents are instead used.
func FSByte(useLocal bool, name string) ([]byte, error) {
	if useLocal {
		f, err := _escLocal.Open(name)
		if err != nil {
			return nil, err
		}
		b, err := ioutil.ReadAll(f)
		_ = f.Close()
		return b, err
	}
	f, err := _escStatic.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.data, nil
}

// FSMustByte is the same as FSByte, but panics if name is not present.
func FSMustByte(useLocal bool, name string) []byte {
	b, err := FSByte(useLocal, name)
	if err != nil {
		panic(err)
	}
	return b
}

// FSString is the string version of FSByte.
func FSString(useLocal bool, name string) (string, error) {
	b, err := FSByte(useLocal, name)
	return string(b), err
}

// FSMustString is the string version of FSMustByte.
func FSMustString(useLocal bool, name string) string {
	return string(FSMustByte(useLocal, name))
}

var _escData = map[string]*_escFile{

	"/doc/show.html": {
		name:    "show.html",
		local:   "views/doc/show.html",
		size:    60,
		modtime: 1593645606,
		compressed: `
H4sIAAAAAAAC/6quTklNy8xLVVDKTczMU6qt5VJQUFCwScksswOzQKC6Wg8mrg+WqK5OzUuprQUEAAD/
/+o8KgA8AAAA
`,
	},

	"/env/create.html": {
		name:    "create.html",
		local:   "views/env/create.html",
		size:    981,
		modtime: 1599206988,
		compressed: `
H4sIAAAAAAAC/4xTwY6cMAy971dYvgfUPQOXttf+QhWIBywFBwXD7gjx7xUBrSiamZYLDn5+fn44y+Lo
xkKAvWXBdX0DACgcz9B4O44lNkGURLFKmZTt3i9J05F1wKNpSJQiVssC2S/bE6xrkXfvp9oT8zBFMu2J
+Arwpg6fxscWEnQ6XubbpSbV3ULswTbKQUrMSWaEnrQLrsQhjIp/dU3gr8hYz62QQ3BWralZP2x0JObD
atOxtCU+arm3ZfJuJH2cThCWYVIQ21OJv3dNCHofqMSOnSNBmK2f6BBavT2nurq3+R+DN20M04DPNaRi
b2vycAuxRJI52wRh9YMGH+7wU2aOQXoShe3HFXlC/4Nxn4zdifCY8+v8kuB4di+UPvW/4IO3DXXBO4ol
uqQ/6abTDFvvLMteWFLkjudXXteTapBD3DjVPV+W6ACcYjNE7m28Y/U9klUq8v37kzZF/nx7inzbzMvd
2CU/OB7hspC4df0TAAD//47oZIzVAwAA
`,
	},

	"/env/index.html": {
		name:    "index.html",
		local:   "views/env/index.html",
		size:    766,
		modtime: 1593645606,
		compressed: `
H4sIAAAAAAAC/3xRQW/yMAy991dYuZdInEM+fRo7IE37D6Exq7XUQWlaiUX57xMFRgPdbvZ79vOznZLF
AzGC6AyxyLlSlkZonOn7jWg8R+QodAUAoNr1A1G3aCxQXzfIEYPQWzw6f+qQI7zySMHzFL9RH5Vs17q6
CJmbznEIWO+HGD3DLK6PgToTTgLagIeNkMijbAKaiKJo7ZCH2hF/Cv0y0bDsQElzmx3N3mEhckHuYd36
QF+eo3HXzS+N52Xnebgn1wL9bjpUMrbPzG67jP9vInnuS1LJufiZm0bPZu+9Pd0rUoJg+ANhBTn/5dDq
lGB1dgk5KxntcsFu+ytdABM4uGdwIhxpZWYf/Ed286MuNFqa/qKkowVZ+ahb+ilPlBIg22J5ObuRktNj
dVUpaWnUVUrINufvAAAA//9UPxOR/gIAAA==
`,
	},

	"/env/show.html": {
		name:    "show.html",
		local:   "views/env/show.html",
		size:    1041,
		modtime: 1599206782,
		compressed: `
H4sIAAAAAAAC/6xTTYvbMBQ8W79CvMu2C47pnm2XQvbQS289F8V6iR+Vnoz8ZBqM/3ux80HWpLsEetIw
vJkxM3gcLe6JUYM3xDBNKistDbpxpu8raAILskCtsqxsX1Z03qKxmvq8QRaMUI+j3rzysPlhPOppKov2
ZVHeOHYpYn5YDN/wLt+FP7mLB71cpPOTf4FajWPxnM33+xC9No1Q4AoK5AG0R2mDraALvcCbkOX4inLj
6MBooX4upulqmZV7Qmd7lBWflcRdEs3GYwW/TjGg5dhhBS1Ziwx6MC7hHCfwrhx52MzoH/pVbR97kf3A
6fv2rs8uiQQ+S/u087Tq7Hxwg/MukjfxCPXPzhrBsjjx6xqL+z2WxVz+ift/E6rVdOrhySw6FIS7ykca
Vu81G7hx1PyuIKKkyLoJvKfoPz19i6iPIek+Rfz69PneBlfrbLt8qt5i58LRI4t+5YFi4Blf8i+rqPUa
6maF5Z8rLA21Uld0eccR2U7T3wAAAP//8R5B7REEAAA=
`,
	},

	"/flag/create.html": {
		name:    "create.html",
		local:   "views/flag/create.html",
		size:    957,
		modtime: 1599207014,
		compressed: `
H4sIAAAAAAAC/4xTvc6dMAzdv6ewvAfUbwaWSh079AUqQwxECgkKzv0R4t0rAmoputyWBYOPzzl2nHnW
3BrHgAMZh8vyAQBQaHODxtI0ldh4J+wEq5RJ2f7zlFQ9kwYzqYadcMBqniH7TgPDshR5/3moPTCPMbDq
DsRngFW1fygbOkjQuL/Ul1NNqmt9GIAaMd6VmLeWOoSBpfe6xNFPgn/JJvTvSJE1nWONoElI1UbuFDQ7
dSdpeuO6El9pbrqGrZ5YXqcTxLgxCjgauMSfmycEeY5cYm+0ZodwIxt5N1p9XFOdx7ceQPBWdcHHEa89
pGJLNVtofSixZZIYGKsfbJkmhm+WOliPrMgT7B9UW0tG/2Ha+1sHn60hviXYn20Iwg/5L/hoqeHeW81h
U0qiWZa96bzItbm9G2kdRbzbrUyxHsxpV3bAIVZjMAOFJ1ZfA5NwkW//L2SK/HpJinxdwNMd2Cy/+NzD
eWanl+VXAAAA///RrLpVvQMAAA==
`,
	},

	"/flag/index.html": {
		name:    "index.html",
		local:   "views/flag/index.html",
		size:    628,
		modtime: 1593645606,
		compressed: `
H4sIAAAAAAAC/2RQ0YqrMBR81q8IebeBPp/mcrnlQmHZh/7BqTmtYWNS4rHQDf77ErXWdn1xnMPMOJOS
obP1JGSL1sthKAsw9iZqh123k3XwTJ6lLosCmu0bXTWERtiuqskzRamPwbnQs/jv8CI+bMegmq0usxgf
2msfqTr1zMGLFa6u0bYY71I0kc47qc4OL6qOhEzyRduS7ytn/ZfU/8azOJIj7GiM7UDhlMh4cvSinJgn
rJoQ7XfwjG5sWADnRjOM4ztz+hNbAsXNkznsX7//1myD7xYS1KzPzOg5mZ6CuetSrJ6URER/IbERef11
dAFsdEpik/PFMIBi83Y57H/zEyqgdw9YgLMacD3tH2t2i4HUZCzn5UA5uxioxeGZMBV7K0DezD8Paq44
wjxybg7K2JsuUyJvhuEnAAD///e331l0AgAA
`,
	},

	"/flag/show.html": {
		name:    "show.html",
		local:   "views/flag/show.html",
		size:    1040,
		modtime: 1599207014,
		compressed: `
H4sIAAAAAAAC/6xTy4rcMBA8W1/R9GWTBY/Inm2HwBLIJYdAzkFjtW0RPYweQwahfw/2PJg1k00WclJT
dFU1VShnSYOyBGiEslgKqxqpDtBrEUKLvbORbMSOVVUzPW3geiIhQYW6JxvJY5cz7D5rMe6+CkNQSsOn
p5V6IzknT/W4Kr7Adb13v2rtR1g30vmpP2DHcuaP1bI/OG9A9FE52yIftBgRDMXJyRZnFyK+cFm3r1Mt
tBotSeweeSlXzaoZFGkZKG7wqlF2ThGsMNTij5MNQjzO1OKkpCSLcBA60WIX8VX6cupuGf8gsE3uH9SU
/JvWl+e7SvsUo7Nnbkh7oza5nRdu5nr2ygh/xO77LEWkhp/wbZT8fpYNXwo4Yf+xR7bpj725N0maIuFd
5ttCZq+F62yvVf+zRU8xeQu9s4Py5t3DJ09wdAlC8vTx4f29Gq7S1fN6LHwjTSIQLO4X10sdbFsDu4l/
/XFcqkPH2HW6vDmTlaX8DgAA//8ngoZ4EAQAAA==
`,
	},

	"/layout.html": {
		name:    "layout.html",
		local:   "views/layout.html",
		size:    2422,
		modtime: 1593645606,
		compressed: `
H4sIAAAAAAAC/7yWUYvjNhDH3/dTTHSvVdSlfThKbCh3OVq4hbLs27IUxRo7sytLRpKThpDvXmQriZM4
dNmGe8rIGv//P000srZbhSUZBNbICtludwcAMJsoW4RNg7AMtc77ZzEELU2VMTRs/xClyu+6uBsHChrz
YKtKo5uJfjiYrzFIKJbSeQwZa0PJPyep47SRNWZMoS8cNYGsYVBYE9CEjD31yr/BF2uCsxo2tnXwDWVo
HcIjapQePawpLKGn8JMrBivCdWNdGKivSYVlpnBFBfJu8BOQoUBSc19Ijdn99Gc2XI8m8wYOdcZ82Gj0
S8TAYOmwzJiQ3mPwomkdFr7/5TWZaeH9kOk9GvH90prA5Rq9rTFpHEUmnD9TCTog/DmHzy/5xxgrR8pz
h76xxtMKudWK0yj25BmNovKF8/wCowqJIj64FcoYA+cnHDerRwTQcmPb4IUnhbxG06Zi/KhCjDK8qwIz
0fdlFy+s2uR3aULRCkhlrNdlUGjpfca6rVmdbyh4QNOmNoITfJlQP0Uk1inG6DuZt4NmV7G4zgHuQfkP
WS9aV6EDKqw5Ee9yfCNNPhPdz9FWyCHhfi09Q3KNhVpIB92KWn6/D2rF7/mv5yhRYliCTuo0J633PIvH
CpOp9n/aJ5Y/7U+9IeVBotWXGpp8GLFLO+QynwLWLD9UX6BZCTIK/2Fj2rHyX7HRdlOjCTA3K3LWxNhH
xpnQ9D+8Sy2r/zBPxzF807K6haWzWl/s2hG/xz7vFpYNaRtESUZddf0rpsCXp+83sFO28OJx/vvXh/m0
vm4Z0z7sNpp/0tXCr2VVoRMtiWsMEKSr4jf874WWkSm9w1vqGmDUYBR3Jlp91pZC0WrY9t1wpPElmQNf
+oiPNf4vF42/3QasGy0DQlKZpqvPueFJ3N9IwLvieEq/etHS9NWzeFx184c3+5M3HcjdRWq7RaN2u38D
AAD//9X/CXh2CQAA
`,
	},

	"/login.html": {
		name:    "login.html",
		local:   "views/login.html",
		size:    360,
		modtime: 1593645606,
		compressed: `
H4sIAAAAAAAC/2SQUY7yMAyE33sKy+80F2h6if+/QGgMWJvYUeKyQlXvvmrLSrC8JfONRx4vS6QLCwHm
wILr2gEADJHvMKXQmsdJxUgMx53s9KI1/+IyVzptAkKYjFU8uqRXFoRMdtPosWh7HT8imFJsZO/yjljK
bCAhk0fTLxIEexTyWEJr31ojQklhopumSNXj/83T9z2O3WfYeTZTeQa0+ZzZ8G31p+HlfSqVc6gPHP/x
VYBlcAf4U8F9dhjcdonjP7jI97FbFpK4rj8BAAD///JUCoxoAQAA
`,
	},

	"/pilot/edit.html": {
		name:    "edit.html",
		local:   "views/pilot/edit.html",
		size:    1833,
		modtime: 1593645606,
		compressed: `
H4sIAAAAAAAC/7RVQW/bPAy951cQwncq4Bhfj4Pty5oOuxTFtnvBWIxNTJY8i3ZbCP7vg2W3S9olwdpN
pwSkH9+jyKcQ0gv4tPkGacvGSUqaBS7ScVyFoGnHlkA1yFaN4woAINM8QGnQ+1yVzgpZUUWMxGh9+SKY
1IQa2CclWaFOFbdTGfjorHTOwC1aMh8gBFjHwOZBqLNoPl/BOGZpfVmsnsFDgA5tRbC+JpS+o2uDlYeF
2P7Jdq5rAEthZ3O1KNsZrFJPknTOGNeLgoakdjpXrfOiXoHMZ1HT9h0lEfX5V4KGK0tagUbBZMtyj50m
m9yjlDXbKlf/qz36hwSZjPYkxZGyABnbtheQx5ZyVbPWZBVYbChXdzNxBQOanhb+b0KKnVnTg9zxL7gQ
4L/f3MZ7Kky9f1Fi/YUMoY+X+G58ssMrBVfUGve4scMT+uo4/t5Qx/st5/FMqs717Qli8WODWzKwc12u
yE7D1cSleKHxBhuKMx3Tz0B6MlQKsD6APJDM/q7FTrjkFoVtdYZlhHXttBFPXbqvWciwl2mGQwDeAf1Y
9vCroBAcpozjTIt0CGT1OJ6vOJ1NFED6PL105vfHQrYGy++nhRykvFHItetKgiuafGVA+ZeKejt771E9
ewlvVHPjBHxLJe/4rynJ0plKsTqdtu1FnF322ffbhkUd7N+coAqPA2Xp/O+EPaSah2NOmx632iydfLzY
f2DI6ulBWe3BLl39GQAA//8lG+xpKQcAAA==
`,
	},

	"/pilot/find.html": {
		name:    "find.html",
		local:   "views/pilot/find.html",
		size:    590,
		modtime: 1593645606,
		compressed: `
H4sIAAAAAAAC/3xRwYrcMAw9J18hdFxITO9OTruUhVL20HvxxJoZgSMHR8nOYvzvJclsGUpbn56Q9N7T
c87mCb6+/AAzcYhqziwenkwpdc6eziwEODoWLKWurOcVhuDmucMhipIo9nVV2XNMI7hBOUqHD0wII+k1
+g6nOCt+7k5Lombf+Y0aF/gi5BG8U9ecWN9d8iTNu9PhynLp8MuuVdkzU/Az6V5VdqZAg4J+TNSh0k0R
xI3U4W6jJVl/sse+hr+8nCE5uRC0L7JyijKS6AzbrfuzcdpugtWFhTrMGdrXZygF+w1+dyNBKdYcU/+U
IPGflNYcdvv6KFmm5T/eb7p5hym4ga4xeEodvm0teFtOgQd4uSklcQFen9u2xXskp0U1yp12Xk4j/5H9
feABN1Pi0aUP7L9F52EXseboHbGbx9yt2T6trytrPK99nTOJL+VXAAAA//81gx/gTgIAAA==
`,
	},

	"/rollout/edit.html": {
		name:    "edit.html",
		local:   "views/rollout/edit.html",
		size:    2425,
		modtime: 1599208233,
		compressed: `
H4sIAAAAAAAC/+xUTW/bOBA9279iwFMSWJHtze4GXkmHbdyglyJIew9G4lgiQpECSTlxBf33QhKdOG7z
iR7aojqNhjNv3pBvpmnCIzhffoawElK7kLhwcBS27bhpOK2EImAlCsXadjyKuFhDJtHamGVaOVKOJePR
KCrme+6gIOQgbJCRcmT6qNGyw74kSWgJ3kvM4VJLqWsHFxIVaAVNA8dnVEm9Waq1MFqVpNxHLAnaFlba
9AEeoQPwRx2FsJgn485YaVMCZk5oFbPQDBXCuuLoiEFJrtA8ZpW2jm1JV7WhoM+7swLrMLsmzoCjwyAV
7gYNJxXcoMsKofKYzYauopUgyS25/m8UScpJ8WS3tSj0ziFCqKp24DYVxawQnJNioLCkmF0N9BisUdbk
WT6btZKYX4n7rL1L+nAGbfs8Cqn1Psg3T7GF8p1iSrJ7lphVZLqXxpxYcnFnL6Kwj/lObVWXKRkGgj9I
9lx2PH0qDF8pVMymDEq8jdlsOn1A9v/NfeHje/MRwpaIs+SdVs5oCbnRdQUGFdel+EIGDrrzwxfy77E8
88F+jNYnIr5LKK2d08pD2jotxZ4ofcCOHVRGlGg2LLG4pigcvIMSw10pRmGn42EmrNtIApvpinjMBi0c
ezxSmEqCpmeUaanNAm4K4ei/3pNqw8kEBrmo7QJOqlvvx+y6uzbFF2Dy9GB+OoHZ6ckE/vn7sI9ox7tV
uLA/psz8rwnMZv9OYD7d1ul67Tv8ORbArz/ej0K9Ve1PAj45/lvwbtqT1w3NA32zZDno/FzqFKXcvHBy
/ojpNxTTW6XklxhLzvw2e5WYopCLdTJuGlK8bb8GAAD///60DHF5CQAA
`,
	},

	"/rollout/index.html": {
		name:    "index.html",
		local:   "views/rollout/index.html",
		size:    714,
		modtime: 1599209453,
		compressed: `
H4sIAAAAAAAC/2yRQWvcMBCFz/avGETpIeAV5KxVKSQpvZRQ+gcUa3Yl0EpGGjtshf57ke2szTa++PE0
1vv8Jmf+AD+e/wAfrAvEUVuCB15Km7PGk/UI7KKsZ6W0jdB2gt6plI6sD57QE5Nt2zTCPN75nUGlwaau
R08YmXx1qBJCQoc9ARmEiIt1cuoM78b2BmJwLowEg1MermGEd5sMUIDeKH9Gwc3jkkfqzeFH5DBG7BZn
k50J0f4NnpRjsm3qNxVplXF+V0++OHUWnMzm/F7BXjFWelWD9+ffe7LBp5sp+HpfdeaMJeQt6KtsYffk
DLH+CBxeUNEYsYYnqN3usRpBWuYMh5WkTv1SF4RSBCf9+dBG+//Yohoxug/ZCGelUGAino6Mr8XP6/+G
fuqsPuYMXw5POLhwffaTjcFf0NPPJyjla93ZOrOHnA+ZrLcIrrYs7uyNgd8gNsilwbum0OvazFrsUuYs
63prx4JrO8k2Z/S6lH8BAAD//8RH5SPKAgAA
`,
	},

	"/rollout/landing.html": {
		name:    "landing.html",
		local:   "views/rollout/landing.html",
		size:    649,
		modtime: 1593645606,
		compressed: `
H4sIAAAAAAAC/3SRwYrcMAyGz8lTCB8XsqZ7dnLqUgql9NAX8MRKInDkYCuZHYzfvSSZaZelq9Nv89vS
/yln/QTfXn+DXsgH0QOxgyddSp2zw4EYQc2WWJVSV8bRBr23KbWqDyzIorq6qsz08uG6mdA6oNT0yILx
cFW/PNqEkNBjL2AZHC4+3GZkAeSNYuBDXyeMCLewwpXSBBKgDzzQuEaEGLwPq8DiLae9tZ5eunoXQ4gz
2F4ocKv03aeJHb4pmFGm4Fq1hCTqMeuyRmyOZ39VYz2NjE6Bs2KbC8nVRofcXK30E/HYqi9nGDMQepdQ
jlNl7qnktmCrBN9EAdsZW4W8NeRUV8N/KmeIlkeE59d/ABLssI8yYdkDwWb9iq3KGZ6/f4VSVLfLn3ZG
KMXo0/VpC2T3+NLoc9CDWVWZyyoS+D52Wi8zfeBzN7zTzRJptvGmuh/BOoh4rnXwdnysJxl9ek9U+j0r
o3fQXV0Z7Wjr6pyRXSl/AgAA//8VahRciQIAAA==
`,
	},

	"/doc": {
		name:  "doc",
		local: `views/doc`,
		isDir: true,
	},

	"/env": {
		name:  "env",
		local: `views/env`,
		isDir: true,
	},

	"/flag": {
		name:  "flag",
		local: `views/flag`,
		isDir: true,
	},

	"/pilot": {
		name:  "pilot",
		local: `views/pilot`,
		isDir: true,
	},

	"/rollout": {
		name:  "rollout",
		local: `views/rollout`,
		isDir: true,
	},

	"/views": {
		name:  "views",
		local: `./views`,
		isDir: true,
	},
}

var _escDirs = map[string][]os.FileInfo{

	"views/doc": {
		_escData["/doc/show.html"],
	},

	"views/env": {
		_escData["/env/create.html"],
		_escData["/env/index.html"],
		_escData["/env/show.html"],
	},

	"views/flag": {
		_escData["/flag/create.html"],
		_escData["/flag/index.html"],
		_escData["/flag/show.html"],
	},

	"views/pilot": {
		_escData["/pilot/edit.html"],
		_escData["/pilot/find.html"],
	},

	"views/rollout": {
		_escData["/rollout/edit.html"],
		_escData["/rollout/index.html"],
		_escData["/rollout/landing.html"],
	},

	"./views": {
		_escData["/doc"],
		_escData["/env"],
		_escData["/flag"],
		_escData["/layout.html"],
		_escData["/login.html"],
		_escData["/pilot"],
		_escData["/rollout"],
	},
}
